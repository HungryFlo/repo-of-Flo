
public class SortTest {
    // 使用指定的排序算法完成一次排序所需要的时间，单位是纳秒
    public static double time(SortAlgorithm alg, Double[] numbers){
        double start = System.nanoTime();
        alg.sort(numbers);
        double end = System.nanoTime();
        return end - start;
    }
    // 为了避免一次测试数据所造成的不公平，对一个实验完成T次测试，获得T次测试之后的平均时间
    public static double test(SortAlgorithm alg, Double[] numbers, int T)
    {
        double totalTime = 0;
        Double[] testNumbers = numbers.clone();
        for(int i = 0; i < T; i++)
            totalTime += time(alg, numbers);
        return totalTime/T;
    }
    // 执行样例，仅供参考。
    // 由于测试数据的规模大小，算法性能，机器性能等因素，请同学们耐心等待每次程序的运行。
    public static void main(String[] args) {
        int[] dataLength = {(int)Math.pow(2,8),(int)Math.pow(2,9),(int)Math.pow(2,10),(int)Math.pow(2,11),(int)Math.pow(2,12),(int)Math.pow(2,13),(int)Math.pow(2,14),(int)Math.pow(2,15),(int)Math.pow(2,16)};
        double[] elapsedTime = new double[dataLength.length];
        SortAlgorithm alg = new Quick_update();
        for(int i = 0; i < dataLength.length; i++)
            elapsedTime[i] = test(alg, GenerateData.getInversedData(dataLength[i]), 5);
        for(double time: elapsedTime)
            System.out.printf("%6.4f ", time);
        System.out.println();
    }
}
//(int)Math.pow(2,8),(int)Math.pow(2,9),(int)Math.pow(2,10),(int)Math.pow(2,11),(int)Math.pow(2,12),(int)Math.pow(2,13),(int)Math.pow(2,14),(int)Math.pow(2,15),
/*
结果：
选择排序：
,,,,乱序：646480.0000,810360.0000,5216780.0000,3451820.0000,13326260.0000,53072580.0000,236708440.0000,1101155780.0000,4808753200.0000
,,,,正序：673840.0000,815200.0000,3853560.0000,1939400.0000,7704600.0000,31027140.0000,128925740.0000,693407720.0000,2670950720.0000
,,,,逆序：880000.0000,844980.0000,7165340.0000,3632840.0000,14365020.0000,58608360.0000,252736780.0000,1084954120.0000,4502642480.0000
,,,,不匀：709960.0000,902620.0000,7810680.0000,8972540.0000,19912840.0000,86534640.0000,498192580.0000,2317368140.0000,13764761740.0000
插入排序：
,,,,乱序:386280.0000,898000.0000,1149020.0000,1370900.0000,3291480.0000,14115640.0000,53964540.0000,316715600.0000,1586506900.0000
,,,,正序:43180.0000,43720.0000,66320.0000,125640.0000,276080.0000,421140.0000,250280.0000,237340.0000,302640.0000
,,,,逆序:764640.0000,1783020.0000,1127500.0000,3463940.0000,6567880.0000,26136200.0000,108678180.0000,495460960.0000,3352051980.0000
,,,,不匀:222700.0000,438700.0000,1159760.0000,1667620.0000,5377860.0000,12731920.0000,35900020.0000,156989740.0000,733090540.0000
希尔排序：
,,,,乱序:175020.0000,148880.0000,361760.0000,322840.0000,784160.0000,982520.0000,2201940.0000,2746840.0000,9321320.0000
,,,,正序:170160.0000,183120.0000,370640.0000,405920.0000,191160.0000,442780.0000,320280.0000,644640.0000,1467720.0000
,,,,逆序:141660.0000,134840.0000,268200.0000,355320.0000,886880.0000,917120.0000,1243420.0000,1090480.0000,2299960.0000
,,,,不匀:173480.0000,119220.0000,227160.0000,488580.0000,632280.0000,1114120.0000,971400.0000,1399820.0000,3818280.0000
归并排序：
,,,,乱序:174420.0000,87320.0000,142320.0000,266360.0000,769800.0000,2113820.0000,13971980.0000,17393940.0000,6029860.0000
,,,,正序:272340.0000,125000.0000,186920.0000,325680.0000,770900.0000,2332820.0000,12997100.0000,8645920.0000,6153220.0000
,,,,逆序:293540.0000,179160.0000,348220.0000,682320.0000,833840.0000,3623400.0000,11007900.0000,14592100.0000,6858920.0000
,,,,不匀:299440.0000,188580.0000,446000.0000,706540.0000,1305500.0000,6132160.0000,10919980.0000,6879100.0000,6172660.0000
快速排序：
,,,,乱序:201260.0000,72520.0000,135620.0000,263440.0000,1036060.0000,1405140.0000,2822540.0000,5558600.0000,3651920.0000
,,,,正序:229600.0000,73060.0000,205320.0000,265880.0000,538740.0000,1166500.0000,4042660.0000,6187060.0000,3265560.0000
,,,,逆序:214460.0000,111620.0000,240120.0000,968260.0000,3171600.0000,9499700.0000,4730680.0000,18094100.0000,72704400.0000
,,,,不匀:241980.0000,134880.0000,168280.0000,311020.0000,1216200.0000,1576560.0000,2813200.0000,6417160.0000,8831980.0000
优化快速排序：
,,,,乱序:338080.0000 100760.0000 107120.0000 182340.0000 708040.0000 1132960.0000 1726960.0000 8226760.0000 4730540.0000
,,,,正序:149020.0000,100400.0000,118920.0000,218860.0000,479700.0000,994960.0000,3424840.0000,5028680.0000,1597520.0000
,,,,逆序:183880.0000,147940.0000,250580.0000,985520.0000,3103540.0000,9707160.0000,4694080.0000,18359560.0000,72049020.0000
,,,,不均:243340.0000,100480.0000,150840.0000,666400.0000,1244340.0000,3106560.0000,3482460.0000,5235600.0000,8032240.0000
优化快排2^16：
    50:12475340.0000
    60:11279740.0000
    80:11530620.0000
    100:8851100.0000
三路快排2^16：
    50:960.0000
    60:1000.0000
    80:1060.0000
    100:1040.0000
 */

//256,512,1024,2048,4096,8192,16384,32768,65536
